# Initial Game & Game Engine -- Pong Game
## Game Image
![Game Image](/initial_game_and_game_engine/game_image.png)
## Program Versions
- OS Version: (Tested on Cerf22 and Windows 10)
- Python Version: 3.10.10
- Pygame Version: 2.1.2
## Motivation
I did not have any experience building 2D games before. Therefore, I think that pong game is a good opportunity for me to try out something simple. The rules and how the game is played is well understood so that I could focus on implementing the game rather than designing it. I want to build a small 2D game that works so that I could see the major components of building a larger game. Pong game is relatively simple, but it has the basic components of a 2D game. Learning how to build these basic components would help me build more complicated 2D games.
## Reasoning
The implementation is done using Model View Controller with a game loop. The models have classes that represent types of entities in the games, which include the paddles each player has, the pong ball, the score keeper, and the table (surface) on which the game is played. The view displays the state of the game to the users. The controller takes input from the users, such as pressing up/down keys, manipulates those entities (instances of the models) created by the main game loop. In the game loop, entities including two paddles hold by both players, a pong ball, a score keeper, and the pong table were created. In addition, the game loop instantiate the controller and the view. During each iteration of the game loop, the controller handles input events to manipulate the entities, the view update the display, and the score keeper checks to see if the game has ended. If the game has ended, the game loop is finished, and the view display the end game screen. I did not include a event queue because it wasn't neccessary. In each loop, the controller only needs to know which key was pressed so that it could updates the position of paddles. In addition, when testing out the game, I realize that the game play is not consistently smooth. Therefore, I use delta time when changing the positions of the paddles and the pong so that the displacement is more consistent. 
## Future Work
I think that some of things that could be improved about the game include things that will make the user interface more friendly. For example, the game could have a setting menu that allows the users to change the number of points needed to win the game. Additionally, users could adjust the screen to make it bigger or smaller, or be able to change the color of the table, pong, and the padles to the ones they like. In terms of the game engine, because the game is quite simple, it feels more like building a small game on top of abilities provided by pygame so that it feels like building on pygame as a basic game engine. To improve the game engine prospect, I think that the game could have more generalized models that allows the developers to create some complex characters. The views could be more separated from the models.
## Generalization
Because the game is quite simple, it feels more like building a small game on top of a basic game engine pygame. However, I think that the game could be generalized into other ones. For examples, the basic structures of the implementation in terms of model view controllers could be used in other games just by adding more models that represent player characters or more functions in views to display the state of the game in the desired ways. I think that the game could be directly generated to other basic games that does something with balls or paddles. This might be something more complexed working with multiple balls and even four players games with four paddles where each paddle is in a different edge of the table.